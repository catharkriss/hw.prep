// @use "sass:math";
// @use "sass:string";
// @use "sass:map";


// @mixin text(
//   $font-size: 16px,
//   $font-weight: 400,
//   $color: black,
//   $line-height: initial,
// ) {
//   font-weight: $font-weight;
//   color: $color;

//   @if (string.index(#{$font-size}, "px")) {
//     font-size: rem($font-size);
//   } @else {
//     font-size: $font-size;
//   }

//   @if (string.index(#{$line-height}, "px")) {
//     line-height: rem($line-height);
//   } @else {
//     line-height: $line-height;
//   }
// }

// $breakpoints: (
//   "mobile": 768px,
//   "desktop": 1024px,
//   "hd": 1240px,
//   "fullhd": 1440px,
// );

// @mixin media($screen) {
//   @if (string.index(#{$screen}, "px")) {
//     @media screen and (min-width: #{$screen}) {
//       @content;
//     }
//   } @else {
//     @media screen and (min-width: map.get($breakpoints, $screen)) {
//       @content;
//     }
//   }

@use "sass:map";
@use "sass:string";
@use "sass:math";

@function rem($sizeInPx) {
    $remSize: math.div($sizeInPx, 16px);
   @return #{$remSize}rem;
}

$fonts: (
  "main": $font-main,
  "secondary": $font-secondary,
  );
@mixin text(
  $font-size: 16px,
  $font-weight: 400,
  $color: $grey-4,
  $line-height: initial,
) {
  font-weight: $font-weight;
  color: $color;
  font-size: rem($font-size);

  @if (string.index(#{$line-height}, "px")) {
      line-height: rem($line-height);
      } @else {
      line-height: $line-height;
    }
}

@mixin font-family($type) {
  font-family: map-get($fonts, $type);
}
